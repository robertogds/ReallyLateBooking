// Generated by CoffeeScript 1.3.3
(function() {

  root.xhrLoadCredits = Titanium.Network.createHTTPClient({
    timeout: 15000
  });

  root.xhrLoadCredits.onload = function() {
    var credit, _i, _len, _ref;
    Ti.API.info('Entra en load credits OK');
    root.creditsLastUpdate = new Date();
    Ti.API.info(this.responseText);
    root.credits = JSON.parse(this.responseText);
    root.totalCredit = 0;
    _ref = root.credits;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      credit = _ref[_i];
      root.totalCredit = root.totalCredit + credit.credits;
    }
    root.balanceLabel.text = root.totalCredit + 'â‚¬';
    if (root.totalCredit === 0) {
      root.creditsTab.badge = void 0;
    } else {
      root.creditsTab.badge = root.totalCredit;
    }
    if (root.tabGroup.activeTab.id === 'deals') {
      root.showConfirmBooking();
    }
    root.hideLoading(root.creditsWindow);
    return root.hideLoading(root.oneDealWindow);
  };

  root.xhrLoadCredits.onerror = function() {
    Ti.API.info('Entra en load Credits ERROR');
    Ti.UI.createAlertDialog({
      title: 'ReallyLateBooking',
      message: L('errorHappened')
    }).show();
    root.hideLoading(root.creditsWindow);
    return root.hideLoading(root.oneDealWindow);
  };

  root.fetchCreditsConnect = function() {
    var signature, url;
    Ti.API.info('Es necesario actualizar');
    url = root.urlSignature('/user/' + root.user.id + '/coupons');
    signature = root.doSignature(url);
    url = url + '/' + signature;
    root.xhrLoadCredits.open('GET', root.url + url);
    root.xhrLoadCredits.setRequestHeader("Accept-Language", Titanium.Locale.currentLanguage);
    return root.xhrLoadCredits.send();
  };

  root.fetchCredits = function(reload) {
    var diffTime, now;
    Ti.API.info('Entra en fetchCredits');
    now = new Date();
    if (root.creditsLastUpdate === void 0) {
      root.creditsLastUpdate = new Date();
    }
    diffTime = now.getTime() - root.creditsLastUpdate.getTime();
    Ti.API.info('FetchCredits -- La diferencia es ' + diffTime);
    if (root.credits === void 0 || diffTime > 60000) {
      return root.fetchCreditsConnect();
    } else {
      Ti.API.info('ListCredits: No es necesario actualizar');
      if (root.tabGroup.activeTab.id === 'deals') {
        root.showConfirmBooking();
      }
      root.hideLoading(root.creditsWindow);
      return root.hideLoading(root.oneDealWindow);
    }
  };

}).call(this);
