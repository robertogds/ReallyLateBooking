h1. Recaptcha module for Play!

Integrate challenge-response "reCaptcha":http://www.google.com/recaptcha tests in 2 minutes.

h2. What is a Captcha?

A Captcha is a type of challenge-response test used in computing to ensure that the response is not generated by a computer. Captcha are typically used to fight spam and validate that a human is using the system. 

!http://www.google.com/recaptcha/static/images/smallCaptchaSpaceWithRoughAlpha.png(sample)!

h2. Features

* 2 minutes integration guaranteed
* Industry standard Captcha engine [reCaptcha](http://www.google.com/recaptcha)
* Automatically detects language preference from the "Play Framework":http://www.playframework.org
* Customizable theme, tabindex and language


h2. Prerequisites

The modules requires the recapctha public/private key for your domain.

# Please go to "http://www.google.com/recaptcha":http://www.google.com/recaptcha
# Register and create a site for your domain
# Write down the generated **public** and **private keys**


h2. Installation

# run *'play install recaptcha'* and let Play! install the module for you
# open your application **conf/dependencies.yml** and add
<pre>
    - play -> recaptcha 1.x
</pre>
# open your application **conf/application.conf** and add
## ugot.recaptcha.privateKey=YOUR_RECAPTCHA_PRIVATE_KEY
## ugot.recaptcha.publicKey=YOUR_RECAPTCHA_PUBLIC_KEY

Make sure to replace {version} and KEYS with their appropriate values

h2. How to Use

Well it's kind of easy, the module offers two integration points:

# a tag to render the captcha: #{ugot.recaptcha /}
# an annotation to validate the result: @Recaptcha

h4. Generating the captcha

Play being an MVC framework, we need to define an action in the controller and its associated page.
Edit file **app/controller/Application.java** as follows:

<pre>
    public class Application extends Controller {
        public static void register() {
            render();
        }
    }
</pre>

Create a file `app/view/Application/register.html`

bc.
 #{extends 'main.html' /}
 #{set title:'Test reCaptcha' /}
   #{form @save()} 
     Your form data
     &lt;p>#{ugot.recaptcha theme:"red", tabindex:"2"/}&lt;/p>
     #{ifErrors}
       &lt;ul>
         #{errors}
            &lt;li>${error}&lt;/li>
         #{/errors}
       &lt;/ul>
     #{/ifErrors}
     &lt;p>&lt;input type="submit" value="Register me, I am human" />&lt;/p>
   #{/form}


h4. Validating the captcha

Edit file *app/controller/Application.java* and add the following:

<pre>
import ugot.recaptcha.Recaptcha;

 public class Application extends Controller {
        
  public static void save(@Recaptcha String captcha) {

     if(validation.hasErrors()) {
        System.out.println("ERRORS found - invalid captcha");
        params.flash();
        validation.keep();
      }
      else {
        System.out.println("There are no errors, the catcha was validated");
      }
            
      // no matter what, redisplay the same page
      register();
   }
 }
</pre>

h4. Testing the captcha

Start play and launch a browser to "http://localhost:9000/Application/register":http://localhost:9000/Application/register<br/>
Done!


h2. Tag parameters

The *ugot.recaptcha* tag takes the following parameters

*theme*: The theme to use. Possible values are:red (default), white, blackglass, clean<br/>
*tabindex*: Sets a tabindex for the reCAPTCHA text box. If other elements in the form use a tabindex, this should be set so that navigation is easier for the user<br/>
*lang*: A two character country code. By default the module will ask Play to provide the negotiated language. possible values are: en,nl,fr,de,pt,ru,es,tr
*https*: true / false. Optional parameter, default value is false. If true recaptcha is fetched via https, otherwise http (http://code.google.com/apis/recaptcha/docs/tips.html).

See the "reCaptcha documentation":http://code.google.com/apis/recaptcha/docs/customization.html for more details.

h2. Credits

This module is based on the "Recaptcha java library":http://code.google.com/p/recaptcha/downloads/list?q=label:java-Latest.
Author: Olivier Refalo
