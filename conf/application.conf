# This is the main configuration file for the application.
# ~~~~~
application.name=ReallyLateBooking Backend
# Application mode
# ~~~~~
# Set to dev to enable instant reloading and other development help.
# Otherwise set to prod.
application.mode=prod
%production.application.mode=prod

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions
# If you deploy your application to several instances be sure to use the same key !
application.secret=TNakqqgVPlYHVioTiIWYNZUUMvCO3FEbXWAatUA6CRZan994KQpbIy3fzrk7YvCZ

# i18n
# ~~~~~
# Define locales used by your application.
# You can then place localized messages in conf/messages.{locale} files
application.langs=en,es,fr

# Date format
# ~~~~~
#date.format=yyyy-MM-dd
 date.format=dd/MM/yyyy

# Server configuration
# ~~~~~
# If you need to change the HTTP port, uncomment this (default is set to 9000)
http.port=8000
#
# By default the server listen for HTTP on the wilcard address.
# You can restrict this.
# http.address=127.0.0.1

# Session configuration
# ~~~~~~~~~~~~~~~~~~~~~~
# By default, session will be written to the transient PLAY_SESSION cookie.
# The cookies are not secured by default, only set it to true
# if you're serving your pages through https.
# application.session.cookie=PLAY
# application.session.maxAge=1h
%prod.application.session.secure=true

# Session/Cookie sharing between subdomain
# ~~~~~~~~~~~~~~~~~~~~~~
# By default a cookie is only valid for a specific domain. By setting
# application.defaultCookieDomain to '.example.com', the cookies
# will be valid for all domains ending with '.example.com', ie:
# foo.example.com and bar.example.com
# application.defaultCookieDomain=.example.com

# JVM configuration
# ~~~~~
# Define which port is used by JPDA when application is in debug mode (default is set to 8000)
# jpda.port=8000
#
# Java source level => 1.5, 1.6 or 1.7 (experimental)
# java.source=1.5

# Log level
# ~~~~~
# Specify log level for your application.
# If you want a very customized log, create a log4j.properties file in the conf directory
application.log=INFO
%production.application.log=INFO
%prod.application.log=INFO
%test.application.log=DEBUG
#
# More logging configuration
# application.log.path=/log4j.properties
# application.log.system.out=off

# Database configuration
# ~~~~~ 
# Enable a database engine if needed.
#
# To quickly set up a development database, use either:
#   - mem : for a transient in memory database (H2 in memory)
#   - fs  : for a simple file written database (H2 file stored)
# db=mem
#
# To connect to a local MySQL5 database, use:
# db=mysql:user:pwd@database_name
#db=mysql:rlb:rlb11@rlb
#
# If you need a full JDBC configuration use the following :
# db.url=jdbc:postgresql:database_name
# db.driver=org.postgresql.Driver
# db.user=root
# db.pass=secret
#
# Connections pool configuration :
# db.pool.timeout=1000
# db.pool.maxSize=30
# db.pool.minSize=10
#
# If you want to reuse an existing Datasource from your application server, use:
# db=java:/comp/env/jdbc/myDatasource
#
# When using an existing Datasource, it's sometimes needed to destroy it when
# the application is stopped. Depending on the datasource, you can define a
# generic "destroy" method :
# db.destroyMethod=close

# JPA Configuration (Hibernate)
# ~~~~~
#
# Specify the custom JPA dialect to use here (default to guess):
# jpa.dialect=org.hibernate.dialect.PostgreSQLDialect
#
# Specify the ddl generation pattern to use. Set to none to disable it 
# (default to update in DEV mode, and none in PROD mode):
# jpa.ddl=update
#
# Debug SQL statements (logged using DEBUG level):
# jpa.debugSQL=true
#
# You can even specify additional hibernate properties here:
# hibernate.use_sql_comments=true
# ...
#
# Store path for Blob content
#attachments.path=data/attachments

# Memcached configuration
# ~~~~~ 
# Enable memcached if needed. Otherwise a local cache is used.
# memcached=enabled
#
# Specify memcached host (default to 127.0.0.1:11211)
# memcached.host=127.0.0.1:11211
#
# Or you can specify multiple host to build a distributed cache
# memcached.1.host=127.0.0.1:11211
# memcached.2.host=127.0.0.1:11212

# HTTP Response headers control for static files
# ~~~~~
# Set the default max-age, telling the user's browser how long it should cache the page.
# Default is 3600 (one hour). Set it to 0 to send no-cache.
# This is only read in prod mode, in dev mode the cache is disabled.
# http.cacheControl=3600

# If enabled, Play will generate entity tags automatically and send a 304 when needed.
# Default is true, set it to false to deactivate use of entity tags.
# http.useETag=true

# Custom mime types
# mimetype.xpi=application/x-xpinstall

# WS configuration
# ~~~~~
# Default engine is Async Http Client, uncomment to use
# the JDK's internal implementation
# webservice = urlfetch
# If you need to set proxy params for WS requests
# http.proxyHost = localhost
# http.proxyPort = 3128
# http.proxyUser = jojo
# http.proxyPassword = jojo

# Mail configuration
# ~~~~~ 
# Default is to use a mock Mailer
#mail.smtp=mock

# Or, specify mail host configuration
mail.smtp.host=smtp.gmail.com
mail.smtp.user=hola@reallylatebooking.com
mail.smtp.pass=Maskayerr0
mail.smtp.channel=ssl

# Url-resolving in Jobs
# ~~~~~~
# When rendering templates with reverse-url-resoling (@@{..}) in Jobs (which do not have an inbound Http.Request),
# ie if sending a HtmlMail, Play need to know which url your users use when accessing your app.
application.baseUrl=http://club.reallylatebooking.com/
%test.application.baseUrl=http://localhost:8000/
%production.application.baseUrl=http://club.reallylatebooking.com/
%prod.application.baseUrl=http://club.reallylatebooking.com/

# Jobs executor
# ~~~~~~
# Size of the Jobs pool
# play.jobs.pool=10

# Execution pool
# ~~~~~
# Default to 1 thread in DEV mode or (nb processors + 1) threads in PROD mode.
# Try to keep a low as possible. 1 thread will serialize all requests (very useful for debugging purpose)
# play.pool=3

# Open file from errors pages
# ~~~~~
# If your text editor supports opening files by URL, Play! will
# dynamically link error pages to files 
#
# Example, for textmate:
# play.editor=txmt://open?url=file://%s&line=%s

# Testing. Set up a custom configuration for test mode
# ~~~~~
#%test.module.cobertura=${play.path}/modules/cobertura
%test.application.mode=dev
#%test.db=mem
#%test.jpa.ddl=create-drop
%test.mail.smtp=mock

#siena.ddl can take values create/update/none
siena.lifecycle=true

# Facebook Connect
fbconnect.id=195465620529574
fbconnect.apiKey=195465620529574
fbconnect.secret=44626620b221cdb0a5c7d1d38c5a8821
fbconnect.model=models.User

%test.fbconnect.id=137939862903294
%test.fbconnect.apiKey=137939862903294
%test.fbconnect.secret=f7484c93e846ff821a92e8551b4ef8a6

crud.pageSize = 50

##### RLB CONFIGURATION  ######
coupons.referal.price.min = 35
coupons.referal.duration=30
coupons.referal.credits=10

### Image Configuration ###
img.dir.url=http://d2f5bmx5jz1oq8.cloudfront.net/
img.list_size=140_110
img.list_size.v2=832
img.detail_size=320_120
img.complete_size=320_460

### Hotusa / Restel Config ###
# Direct Pay at hotel config #
# hotusa.api.apiUrl = http://xml.hotelresb2b.com/xml/listen_xml.jsp
# hotusa.api.sCodigousu = RENG 
# hotusa.api.sClausu = xml269009 
# hotusa.api.sAfiliacio = VE 
# hotusa.api.sSecacc = 54269 
# hotusa.api.usuario = 939201
# hotusa.api.paytype = 12
# hotusa.api.bookingDays=1
# Credit Pay #
hotusa.api.apiUrl = http://xml.hotelresb2b.com/xml/listen_xml.jsp
hotusa.api.sCodigousu = RENG 
hotusa.api.sClausu = xml451232 
hotusa.api.sAfiliacio = RS 
hotusa.api.sSecacc = 59848 
hotusa.api.usuario = B25603
hotusa.api.paytype = 25
hotusa.api.bookingDays=5

### GetARoom Config ###
getaroom.api.apiKey=01ef3726-6c74-5bd6-8b0b-f8d7176f908e
getaroom.api.authToken=bb3e5dcb-40f5-54b2-8baf-cef0c7d4e903
getaroom.api.apiUrl=https://search.integration1.testaroom.com
getaroom.api.bookingDays=3

###BIDOBIDO config ###
bidobido.api.apiUrl=http://demo.bidobido.com/pay/bidopay_oculto.php
bidobido.api.urlKO=http://localhost:8000/bidobido/ko
bidobido.api.urlOK=http://localhost:8000/bidobido/ok
bidobido.api.terminal=1
bidobido.api.urlPayment=http://localhost:8000/bidobido/payment
bidobido.api.language=1
bidobido.api.bidoUserId=39512669
bidobido.api.bidoPassword=eo930eus
bidobido.api.merchant=RLB
bidobido.api.testMode=1
bidobido.api.currency=1
bidobido.api.transactionType=0



## PAYPALÂ ##
paypal.api.endpoint=https://api-3t.paypal.com/nvp
paypal.api.url=https://www.paypal.com/cgi-bin/webscr?cmd=_express-checkout&token=
paypal.api.username = hola_api1.iipir.com
paypal.api.password =JXN2M7ANFWXVV8EX
paypal.api.signature = Aq01sOAmERsHJhKVN5zrHXY.tR0mA6nfIukkPEdOQ-Q9rDAprYhv6zwW
paypal.returnUrl = http://club.reallylatebooking.com/web/deals/completeBooking
paypal.cancelPay = http://club.reallylatebooking.com/web/deals/completeBooking

%test.paypal.api.endpoint=https://api-3t.sandbox.paypal.com/nvp
%test.paypal.api.url=https://www.sandbox.paypal.com/webscr?cmd=_express-checkout&token=
%test.paypal.api.username = pablo_1336899685_biz_api1.iipir.com
%test.paypal.api.password =1336899714
%test.paypal.api.signature = AWfcI7jvKOe59h6TVSxxdjGjNF60AEc4Z0ljMG2c7D6xmRh3OdmpB3R2
%test.paypal.returnUrl = http://localhost:8000/web/deals/completeBooking
%test.paypal.cancelPay = http://localhost:8000/web/deals/completeBooking

ugot.recaptcha.privateKey=6Lce3dISAAAAAJ73fGt1L6OpqX8dDqe5LvjVK_wG
ugot.recaptcha.publicKey=6Lce3dISAAAAAKpoa4AoCEcgc0DrP4S0qvKm_caq
