// Generated by CoffeeScript 1.3.3
(function() {

  root.xhrCities = Titanium.Network.createHTTPClient();

  root.xhrCities.onload = function() {
    Ti.API.info('Entra en carga correcto');
    Ti.API.info(this.responseText);
    root.citiesLastUpdate = new Date();
    root.listCities = JSON.parse(this.responseText);
    if (root.listCities.length > 0) {
      root.hideLoading(root.allCitiesWindow);
      return root.populateCitiesTable(root.listCities);
    }
  };

  root.xhrCities.onerror = function(e) {
    Ti.API.info("Entra en error de ciudades onerror " + e.error);
    root.hideLoading(root.allCitiesWindow);
    Ti.UI.createAlertDialog({
      title: 'ReallyLateBooking',
      message: 'Error: ' + L('conectionError')
    }).show();
    return root.allCitiesWindow.close();
  };

  root.fetchCities = function() {
    var diffTime, now;
    Ti.API.info("Entra en get Cities");
    if (Titanium.Network.online === false) {
      Ti.UI.createAlertDialog({
        title: 'ReallyLateBooking',
        message: L('mustInternet')
      }).show();
      return root.showError(root.allCitiesWindow);
    } else {
      now = new Date();
      if (root.listCities === void 0) {
        diffTime = 43300000;
      } else {
        diffTime = now.getTime() - root.citiesLastUpdate.getTime();
        Ti.API.info('last cities updated: ' + root.citiesLastUpdate.toLocaleDateString() + 'difftime: ' + diffTime);
      }
      if (root.listCities === void 0 || diffTime > 43200000 || root.listCities.length === 0) {
        root.showLoading(root.allCitiesWindow);
        root.xhrCities.setTimeout(15000);
        root.xhrCities.open("GET", root.url + "/v2/cities");
        Ti.API.info('GET cities from: ' + root.url + '/v2/cities');
        root.xhrCities.setRequestHeader("Accept-Language", Titanium.Locale.currentLanguage);
        return root.xhrCities.send();
      } else {
        Ti.API.info("No se necesita cargar ciudades");
        return root.populateCitiesTable(root.listCities);
      }
    }
  };

  root.mockFetchCities = function() {
    Ti.API.info("Entra en cargar ciudades estat√≠co");
    return root.populateCitiesTable(root.staticCities);
  };

}).call(this);
