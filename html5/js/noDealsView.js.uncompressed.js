// Generated by CoffeeScript 1.3.3
(function() {
  var countDown, countDownLabel, leadingZero, myTick, myTimer, openCities;

  root.noDealsView = Titanium.UI.createView({
    width: '100%',
    backgroundImage: '/images/Texture.jpg'
  });

  root.closedCityView = new root.GenericTextView(0, L('noDealsTitle'), L('noDealsText')).view;

  root.waitingCityView = new root.GenericTextView(0, L('waitingDealsTitle'), L('waitingDealsText')).view;

  root.closedCityView.visible = false;

  root.noDealsView.add(root.closedCityView);

  root.noDealsView.add(root.waitingCityView);

  root.noDealsWindow.add(root.noDealsView);

  root.noDealsWindow.addEventListener('close', function(e) {
    return myTimer.stop();
  });

  countDown = function(hours, minutes, seconds, fn_tick, fn_end) {
    return {
      totalSeconds: hours * 3600 + minutes * 60 + seconds,
      timer: this.timer,
      set: function(totalSeconds) {
        var h, mins;
        Ti.API.info('Entra con milisegundos = ' + totalSeconds);
        this.totalSeconds = totalSeconds;
        h = parseInt(totalSeconds / 3600);
        totalSeconds -= h * 3600;
        mins = parseInt(totalSeconds / 60);
        totalSeconds -= mins * 60;
        this.time = {
          hours: h,
          minutes: mins,
          seconds: totalSeconds
        };
        return this;
      },
      start: function() {
        var self;
        self = this;
        this.timer = setInterval(function() {
          var h, mins, secs;
          if (self.totalSeconds) {
            self.totalSeconds--;
            secs = self.totalSeconds;
            h = parseInt(secs / 3600);
            secs -= h * 3600;
            mins = parseInt(secs / 60);
            secs -= mins * 60;
            self.time = {
              hours: h,
              minutes: mins,
              seconds: secs % 60
            };
            return fn_tick();
          } else {
            self.stop();
            return fn_end();
          }
        }, 1000);
        return this;
      },
      stop: function() {
        clearInterval(this.timer);
        this.time = {
          hours: 0,
          minutes: 0,
          seconds: 0
        };
        this.totalSeconds = 0;
        return this;
      }
    };
  };

  leadingZero = function(time) {
    if (time < 10) {
      return '0' + time;
    } else {
      return time;
    }
  };

  myTick = function() {
    return countDownLabel.text = leadingZero(myTimer.time.hours) + ":" + leadingZero(myTimer.time.minutes) + ":" + leadingZero(myTimer.time.seconds);
  };

  openCities = function() {
    root.noDealsWindow.close();
    return root.loadDeals(root.city);
  };

  myTimer = new countDown(1, 5, 30, myTick, openCities);

  countDownLabel = Titanium.UI.createLabel({
    text: '',
    height: 80,
    width: 320,
    top: 250,
    left: 0,
    color: '#fff',
    borderRadius: 10,
    backgroundColor: 'transparent',
    font: {
      fontSize: 50,
      fontWeight: 'bold'
    },
    textAlign: 'center'
  });

  root.showNoDeals = function(timeToOpen) {
    Ti.API.info('entra en shownodeals con ' + timeToOpen);
    if (timeToOpen === void 0) {
      root.noDealsView.remove(countDownLabel);
      root.waitingCityView.visible = false;
      root.closedCityView.visible = true;
    } else {
      Ti.API.info('entre en waiting city');
      root.noDealsView.add(countDownLabel);
      root.closedCityView.visible = false;
      root.waitingCityView.visible = true;
      myTimer.set(parseInt(timeToOpen / 1000));
      myTimer.start();
    }
    return root.noDealsWindow.open();
  };

}).call(this);
